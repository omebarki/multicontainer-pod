<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.7.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>omar.mebarki</groupId>
    <artifactId>multicontainer-pod</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>multicontainer-pod</name>
    <description>Project avec un pod à conteneurs multiples</description>
    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>

        <docker.remote.registry>tadartiw</docker.remote.registry>
        <docker.image.from>adoptopenjdk/openjdk8:latest</docker.image.from>
        <docker.image.name>${docker.remote.registry}/${project.artifactId}:${project.version}</docker.image.name>
        <app.config.dir>/app/config</app.config.dir>
    </properties>

    <modules>
        <module>multicontainer-server</module>
        <module>multicontainer-client</module>
    </modules>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <layout>ZIP</layout>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-openshift</id>
                        <!-- insert here the phase you need -->
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/openshift</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/openshift</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <name>${docker.image.name}</name>
                            <build>
                                <from>${docker.image.from}</from>
                                <entryPoint>
                                    <exec>
                                        <arg>java</arg>
                                        <arg>-Xmx1G</arg>
                                        <arg>-Dloader.path=${app.config.dir}</arg>
                                        <arg>-jar</arg>
                                        <arg>/app/lib/${project.build.finalName}.${project.packaging}</arg>
                                    </exec>
                                </entryPoint>
                                <assembly>
                                    <mode>dir</mode>
                                    <targetDir>/app</targetDir>
                                    <descriptor>assembly.xml</descriptor>
                                </assembly>
                            </build>
                            <run>
                                <ports>
                                    <port>8080</port>
                                </ports>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
